# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import wallet_pb2 as wallet__pb2


class WalletStub(object):
  """定义钱包服务
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetFees = channel.unary_unary(
        '/walletoserver.Wallet/GetFees',
        request_serializer=wallet__pb2.GetFeeRequest.SerializeToString,
        response_deserializer=wallet__pb2.GetFreeReply.FromString,
        )
    self.Transfer = channel.unary_unary(
        '/walletoserver.Wallet/Transfer',
        request_serializer=wallet__pb2.TransferRequest.SerializeToString,
        response_deserializer=wallet__pb2.TransferReply.FromString,
        )


class WalletServicer(object):
  """定义钱包服务
  """

  def GetFees(self, request, context):
    """GetFees 获取费用
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Transfer(self, request, context):
    """Transfer 转账操作
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_WalletServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetFees': grpc.unary_unary_rpc_method_handler(
          servicer.GetFees,
          request_deserializer=wallet__pb2.GetFeeRequest.FromString,
          response_serializer=wallet__pb2.GetFreeReply.SerializeToString,
      ),
      'Transfer': grpc.unary_unary_rpc_method_handler(
          servicer.Transfer,
          request_deserializer=wallet__pb2.TransferRequest.FromString,
          response_serializer=wallet__pb2.TransferReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'walletoserver.Wallet', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
